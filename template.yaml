AWSTemplateFormatVersion: '2010-09-09'
# Transform: AWS::Serverless-2016-10-31
Description: Christopher Leggett Resume

#Globals:
#    Function:
#        Timeout: 3

Parameters:
    RootDomainName:
        Description: The domain name for the website
        Type: String

Resources:
    CDNAccessIdentity:
        Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
        Properties:
            CloudFrontOriginAccessIdentityConfig:
                Comment: Access to frontend bucket
    CDN:
        Type: AWS::CloudFront::Distribution
        Properties:
            DistributionConfig:
                Aliases:
                    - !Ref RootDomainName
                    - !Sub
                        - www.${Domain}
                        - Domain: !Ref RootDomainName
                #TODO: CustomErrorResponses section
                Origins:
                    - DomainName: !Sub
                          - ${Domain}.s3.amazonaws.com
                          - Domain: !Ref RootDomainName
                      Id: FrontendS3Origin
                      S3OriginConfig:
                          OriginAccessIdentity: !Sub
                              - origin-access-identity/cloudfront/${OriginAccessId}
                              - OriginAccessId: !Ref CDNAccessIdentity
                Enabled: 'true'
                DefaultRootObject: index.html
                DefaultCacheBehavior:
                    AllowedMethods:
                        - GET
                        - HEAD
                        - OPTIONS
                    CachedMethods:
                        - GET
                        - HEAD
                        - OPTIONS
                    Compress: 'true'
                    TargetOriginId: FrontendS3Origin
                    ForwardedValues:
                        QueryString: 'false'
                        Cookies:
                            Forward: none
                    ViewerProtocolPolicy: redirect-to-https
                    LambdaFunctionAssociations:
                        - EventType: viewer-request
                          LambdaFunctionARN: !Ref RedirectLambdaVersion9
                PriceClass: PriceClass_100
                Restrictions:
                    GeoRestriction:
                        RestrictionType: whitelist
                        Locations:
                          - US
                #TODO: Get certificate in place for https over custom domain
                ViewerCertificate:
                    CloudFrontDefaultCertificate: 'true'
                    #ACMCertificateArn: ...
                    MinimumProtocolVersion: TLSv1.1_2016
                    #SSLSupportMethod: sni-only
    #TODO: Attempt to speed up deploys by having cloudfront distro reference lambda alias.
    RedirectLambda:
        Type: AWS::Lambda::Function
        Properties:
            Description: >
                Edge Lambda performing domain redirects.
            Code: temp/build/christopherleggett.info.zip
            Handler: edge/redirects/index.handler
            MemorySize: 128
            Role: !GetAtt RedirectLambdaExecutionRole.Arn
            Runtime: nodejs8.10
    RedirectLambdaVersion9:
        Type: AWS::Lambda::Version
        Properties:
            FunctionName: !Ref RedirectLambda
            Description: !Sub "Redirect handling for www.${RootDomainName}"
    RedirectLambdaExecutionRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: 2012-10-17
                Statement:
                    - Effect: Allow
                      Principal:
                          Service:
                              - edgelambda.amazonaws.com
                              - lambda.amazonaws.com
                      Action:
                          - sts:AssumeRole
    FrontendRootBucket:
        Type: AWS::S3::Bucket
        Properties:
            BucketName: !Ref RootDomainName
            AccessControl: BucketOwnerFullControl
            WebsiteConfiguration:
                IndexDocument: index.html
                ErrorDocument: 404.html
    FrontendRootBucketCDNPolicy:
        Type: AWS::S3::BucketPolicy
        Properties:
            PolicyDocument:
                Id: CDNOriginAccessPolicy
                Version: 2012-10-17
                Statement:
                    - Sid: 'Grant CDNAccessIdentity GetObject'
                      Action: 's3:GetObject'
                      Effect: Allow
                      Resource: !Join
                          - ''
                          - - 'arn:aws:s3:::'
                            - !Ref FrontendRootBucket
                            - /*
                      Principal:
                          CanonicalUser: !GetAtt CDNAccessIdentity.S3CanonicalUserId
            Bucket: !Ref FrontendRootBucket
    DNS:
        Type: AWS::Route53::RecordSetGroup
        Properties:
            HostedZoneName: !Sub
                - ${Domain}.
                - Domain: !Ref RootDomainName
            Comment: Zone apex alias.
            RecordSets:
            -
                Name: !Ref RootDomainName
                Type: A
                AliasTarget:
                    HostedZoneId: Z2FDTNDATAQYW2
                    DNSName: !GetAtt CDN.DomainName
            -
                Name: !Sub
                    - www.${Domain}
                    - Domain: !Ref RootDomainName
                Type: CNAME
                TTL: 990
                ResourceRecords:
                - !GetAtt CDN.DomainName

Outputs:
    WebsiteURL:
        Value: !GetAtt CDN.DomainName
        Description: The URL for the website.

#    Main:
#        Type: AWS::Serverless::Function
#        Properties:
#            CodeUri: temp/build/christopherleggett.info.zip
#            Handler: index.helloWorld
#            Runtime: nodejs8.10
#            Events:
#                HelloWorldGET:
#                    Type: Api
#                    Properties:
#                        Path: /hello
#                        Method: get
