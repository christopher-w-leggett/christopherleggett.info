AWSTemplateFormatVersion: '2010-09-09'
# Transform: AWS::Serverless-2016-10-31
Description: Christopher Leggett Resume

#Globals:
#    Function:
#        Timeout: 3

Parameters:
    RootDomainName:
        Description: The domain name for the website
        Type: String

Mappings:
  RegionMap:
    us-east-1:
      S3hostedzoneID: Z3AQBSTGFYJSTF
      websiteendpoint: s3-website-us-east-1.amazonaws.com
    us-west-1:
      S3hostedzoneID: Z2F56UZL2M1ACD
      websiteendpoint: s3-website-us-west-1.amazonaws.com
    us-west-2:
      S3hostedzoneID: Z3BJ6K6RIION7M
      websiteendpoint: s3-website-us-west-2.amazonaws.com
    eu-west-1:
      S3hostedzoneID: Z1BKCTXD74EZPE
      websiteendpoint: s3-website-eu-west-1.amazonaws.com
    ap-southeast-1:
      S3hostedzoneID: Z3O0J2DXBE1FTB
      websiteendpoint: s3-website-ap-southeast-1.amazonaws.com
    ap-southeast-2:
      S3hostedzoneID: Z1WCIGYICN2BYD
      websiteendpoint: s3-website-ap-southeast-2.amazonaws.com
    ap-northeast-1:
      S3hostedzoneID: Z2M4EHUR26P7ZW
      websiteendpoint: s3-website-ap-northeast-1.amazonaws.com
    sa-east-1:
      S3hostedzoneID: Z31GFT0UA1I2HV
      websiteendpoint: s3-website-sa-east-1.amazonaws.com

Resources:
    CDNAccessIdentity:
        Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
        Properties:
            CloudFrontOriginAccessIdentityConfig:
                Comment: Access to frontend bucket
    CDN:
        Type: AWS::CloudFront::Distribution
        Properties:
            DistributionConfig:
                Aliases:
                    - !Sub
                        - www.${Domain}
                        - Domain: !Ref RootDomainName
#TODO: CustomErrorResponses section
                Origins:
                    - DomainName: !Sub
                          - ${Domain}.s3.amazonaws.com
                          - Domain: !Ref RootDomainName
                      Id: FrontendS3Origin
                      S3OriginConfig:
                          OriginAccessIdentity: !Sub
                              - origin-access-identity/cloudfront/${OriginAccessId}
                              - OriginAccessId: !Ref CDNAccessIdentity
                Enabled: 'true'
                DefaultRootObject: index.html
                DefaultCacheBehavior:
                    AllowedMethods:
                        - GET
                        - HEAD
                        - OPTIONS
                    CachedMethods:
                        - GET
                        - HEAD
                        - OPTIONS
                    Compress: 'true'
                    TargetOriginId: FrontendS3Origin
                    ForwardedValues:
                        QueryString: 'false'
                        Cookies:
                            Forward: none
                    ViewerProtocolPolicy: allow-all
                    #ViewerProtocolPolicy: redirect-to-https
                PriceClass: PriceClass_100
                Restrictions:
                    GeoRestriction:
                        RestrictionType: whitelist
                        Locations:
                          - US
#TODO: Get certificate in place for https over custom domain
                ViewerCertificate:
                    CloudFrontDefaultCertificate: 'true'
                    #ACMCertificateArn: ...
                    MinimumProtocolVersion: TLSv1.1_2016
                    #SSLSupportMethod: sni-only
    FrontendRootBucket:
        Type: AWS::S3::Bucket
        Properties:
            BucketName: !Ref RootDomainName
            AccessControl: BucketOwnerFullControl
            WebsiteConfiguration:
                IndexDocument: index.html
                ErrorDocument: 404.html
    FrontendRootBucketCDNPolicy:
        Type: AWS::S3::BucketPolicy
        Properties:
            PolicyDocument:
                Id: CDNOriginAccessPolicy
                Version: 2012-10-17
                Statement:
                    - Sid: CDNOriginAccessReadForGetBucketObjects
                      Action:
                          - 's3:GetObject'
                      Effect: Allow
                      Resource: !Join
                          - ''
                          - - 'arn:aws:s3:::'
                            - !Ref FrontendRootBucket
                            - /*
                      Principal: !GetAtt CDNAccessIdentity.S3CanonicalUserId
            Bucket: !Ref FrontendRootBucket
    DNS:
        Type: AWS::Route53::RecordSetGroup
        Properties:
            HostedZoneName: !Sub
                - ${Domain}.
                - Domain: !Ref RootDomainName
            Comment: Zone apex alias.
            RecordSets:
            -
                Name: !Ref RootDomainName
                Type: A
                AliasTarget:
                    HostedZoneId: !FindInMap [ RegionMap, !Ref 'AWS::Region', S3hostedzoneID]
                    DNSName: !FindInMap [ RegionMap, !Ref 'AWS::Region', websiteendpoint]
            -
                Name: !Sub
                    - www.${Domain}
                    - Domain: !Ref RootDomainName
                Type: CNAME
                TTL: 990
                ResourceRecords:
                - !GetAtt CDN.DomainName

Outputs:
    WebsiteURL:
        Value: !GetAtt CDN.DomainName
        Description: The URL for the website.

#    Main:
#        Type: AWS::Serverless::Function
#        Properties:
#            CodeUri: temp/build/christopherleggett.info.zip
#            Handler: index.helloWorld
#            Runtime: nodejs8.10
#            Events:
#                HelloWorldGET:
#                    Type: Api
#                    Properties:
#                        Path: /hello
#                        Method: get
